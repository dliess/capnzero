'capnp-inline'='''
struct OneIntParam{
	a @0 :Int32;
}

struct TwoIntParams{
	a @0 :Int32;
	b @1 :Int32;
}
'''

[enumerations]
    EColor = { Blue = 0, Red = 1, Green = 2, Yellow = 3 }
    EMode = { Dimmed = 0, Bright = 1 }

# parameter types: Bool, IntX, UIntX, Float32, Float64, Text, Span, Data<X>
[services]
    [services._.rpc.add]
        parameter = { a = 'Int32', b = 'Int32' }
        returns = { ret = 'Int32' }
    [services._.rpc.sub]
        parameter = { a = 'Int32', b = 'Int32' }
        returns = { ret = 'Int32' }

    [services._.rpc.addDirectRet]
        parameter = { a = 'Int32', b = 'Int32' }
        returns = 'Int32'
    [services._.rpc.subDirectRet]
        parameter = { a = 'Int32', b = 'Int32' }
        returns = 'Int32'
    [services.DirectRet.rpc.add]
        parameter = { a = 'Int32', b = 'Int32' }
        returns = 'Int32'
    [services.DirectRet.rpc.sub]
        parameter = { a = 'Int32', b = 'Int32' }
        returns = 'Int32'


    [services._.rpc.multiply]
        parameter = '__capnp__native__'

    [services._.rpc.multiply2]
        parameter = '__capnp__native__'
        returns = { ret = 'Int32' }

    [services._.rpc.multiply3]
        parameter = { a = 'Int32', b = 'Int32' }
        returns = '__capnp__native__'

    [services._.rpc.multiply4]
        parameter = '__capnp__native__'
        returns = '__capnp__native__'

    [services._.signal.justASignal]


    [services.Screen.signal.listChanged]
        parameter = '__capnp__native__'

    [services.Screen.rpc.setBrightness]
        parameter = { brightness = 'UInt32' }
    [services.Screen.rpc.setColor]
        parameter = { color = 'EColor' }
    [services.Screen.signal.colorChanged]
        parameter = { color = 'EColor' }
    [services.Screen.signal.brightnessChanged]
        parameter = { brightness = 'UInt32' }
    [services.Screen.rpc.setTitle]
        parameter = { title = 'Text' }
    [services.Screen.rpc.setId]
        parameter = { title = 'Data<8>' }
